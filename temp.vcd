$date
	Thu Aug  8 16:52:33 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module assignment_tb $end
$var wire 1 ! g $end
$var wire 1 " f $end
$var wire 1 # e $end
$var wire 1 $ d $end
$var wire 1 % c $end
$var wire 1 & b $end
$var wire 1 ' a $end
$var reg 1 ( x1 $end
$var reg 1 ) x2 $end
$var reg 1 * x3 $end
$var reg 1 + x4 $end
$scope module uut $end
$var wire 1 ' a $end
$var wire 1 & b $end
$var wire 1 % c $end
$var wire 1 $ d $end
$var wire 1 # e $end
$var wire 1 " f $end
$var wire 1 ! g $end
$var wire 1 , k1 $end
$var wire 1 - k2 $end
$var wire 1 . k3 $end
$var wire 1 / k4 $end
$var wire 1 0 t1_a $end
$var wire 1 1 t1_b $end
$var wire 1 2 t1_d $end
$var wire 1 3 t1_e $end
$var wire 1 4 t1_f $end
$var wire 1 5 t1_g $end
$var wire 1 6 t2_a $end
$var wire 1 7 t2_b $end
$var wire 1 8 t2_d $end
$var wire 1 9 t2_e $end
$var wire 1 : t2_f $end
$var wire 1 ; t2_g $end
$var wire 1 < t3_a $end
$var wire 1 = t3_d $end
$var wire 1 > t3_f $end
$var wire 1 ? t3_g $end
$var wire 1 @ t4_d $end
$var wire 1 A t4_f $end
$var wire 1 B t4_g $end
$var wire 1 ( x1 $end
$var wire 1 ) x2 $end
$var wire 1 * x3 $end
$var wire 1 + x4 $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
xB
xA
x@
x?
x>
x=
x<
x;
x:
x9
x8
x7
x6
x5
x4
x3
x2
x1
x0
x/
x.
x-
x,
x+
x*
x)
x(
x'
x&
x%
x$
x#
x"
x!
$end
#20
0$
0"
01
0#
0<
02
09
1'
04
0!
0/
1.
07
1%
08
03
0?
1-
00
06
1&
0=
0@
0>
0A
0;
0B
1,
0:
05
1+
0*
0)
0(
#40
1#
1<
13
1$
1!
1/
0.
18
1?
0+
1*
#60
0#
0<
03
0/
17
1+
#80
1"
16
11
14
1;
0$
1!
1/
1.
07
08
0?
0-
0+
0*
1)
#100
01
04
1$
0/
10
1@
1>
1+
#120
1#
1=
13
1A
1B
1$
1"
06
0;
1/
00
0@
0>
0.
0+
1*
#140
0$
0#
0"
0!
0=
03
0A
0B
0/
10
17
1+
#160
1$
1#
1"
1!
11
1&
1<
12
19
1:
15
1'
1/
1.
07
1-
00
0,
0+
0*
0)
1(
#180
0'
0&
0$
0#
0<
01
02
09
0/
1+
#200
1$
1#
1<
11
12
19
1'
1&
14
1"
0!
1/
1,
0:
05
0+
0(
